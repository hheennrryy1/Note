<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.henry.dao.NotebookMapper">
	<resultMap type="Notebook" id="BaseResultMap">
		<id column="nbid" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
		<association property="user" javaType="User">
			<id column="id" property="id" jdbcType="INTEGER"/>
			<result column="username" property="username" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	
	<sql id="Base_Column_List" >
		u.id,u.username,nb.nbid,nb.name,nb.createtime
	</sql>
	
 	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    select 
  	    <include refid="Base_Column_List"></include>
	    from user u, notebook nb
	    where nb.user_id = u.id and nb.nbid = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
	    select 
  	    <include refid="Base_Column_List"></include>
	    from user u, notebook nb
	    where nb.user_id = u.id and nb.name = #{name,jdbcType=VARCHAR}
	</select>
	
	<select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"></include>
		from user u, notebook nb
		where nb.user_id = u.id and nb.user_id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 用于一对多查询notebook下的note-->
	<resultMap type="Notebook" id="NotesResultMap">
		<id column="nbid" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<collection property="notes" ofType="Note">
			<id column="nid" property="id" jdbcType="INTEGER"/>
			<result column="title" property="title" jdbcType="VARCHAR"/>
			<result column="updatetime" property="updatetime" jdbcType="TIMESTAMP"/>
		</collection>
	</resultMap>
	
	<select id="selectNotesById" resultMap="NotesResultMap" parameterType="java.lang.Integer">
		select
		nb.nbid,nb.name,n.nid,n.title,n.updatetime	 
		from notebook nb, note n
		where nb.nbid = n.notebook_id and nb.nbid = #{id,jdbcType=INTEGER}
	</select>
		
	<insert id="insert" parameterType="Notebook">
		insert into notebook 
		(name, createtime, user_id)
		values (#{name,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{user.id,jdbcType=INTEGER})
	</insert>	
	
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from notebook
		where nbid = #{id,jdbcType=INTEGER}
	</delete>
</mapper>